import{ej as D,j as U,eL as E,b6 as j,eM as V,D as X,cr as Y,eN as W,eO as F,v as s,w as l,z as H}from"./index-HvZUpAiV.js";import{l as I,u as N,t as T}from"./gridUtils-Cln9ad28.js";import{f as m,d as _,c as k}from"./SketchOptions-BCFrY3ky.js";import{r as z,a as q}from"./RouteLayerInteraction-BGbSAk8h.js";import"./geodesicUtils-C93orGFR.js";import"./plane-BVS6atMq.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DFCqiClV.js";import"./projectVectorToVector-BCxdzR8G.js";import"./projectPointToVector-C1iiDdYZ.js";import"./quantityUtils-CkGXr1AE.js";import"./GraphicsLayer-CJh6KSfA.js";import"./RouteLayerView2D-CRO0_qJI.js";import"./LayerView-DxpYE98A.js";import"./Container-C_Kq1KIA.js";import"./GraphicContainer-CtkqudBK.js";import"./AGraphicContainer-XAyEf6Hp.js";import"./TechniqueInstance-LmzY8NVQ.js";import"./UpdateTracking2D-D0nTT2Mu.js";import"./dataViewUtils-DAtkXtzs.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-DCULi5_d.js";import"./FramebufferObject-DWpknOee.js";import"./VertexArrayObject-uoJ0-Wyy.js";import"./memoryEstimations-37nmr0XF.js";import"./TileContainer-CX6XEddH.js";import"./WGLContainer-CwrJPf2u.js";import"./ProgramTemplate-BfiyU3Gv.js";import"./vec3f32-nZdmKIgz.js";import"./config-BY8iCNT-.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-ByHk-OL2.js";import"./OptimizedFeatureSet-gaSfjeKA.js";import"./OptimizedGeometry-Cumf0C0a.js";import"./FeatureCommandQueue-BF6Kyd6u.js";import"./CIMSymbolHelper-C8RwZNuh.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CX2ZFjAl.js";import"./Rect-CnxqbxT-.js";import"./rasterizingUtils-C-5soeya.js";import"./floatRGBA-BYWqjqxI.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-B4iOu8M5.js";import"./ShaderBuilder-CTv5PIaf.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-Bz8c6zwC.js";import"./GraphicsView2D-CCuVzbF4.js";import"./OverrideHelper-Dao22xbu.js";import"./quantizationUtils-DhCYdMlR.js";import"./FeatureMetadata-0sLTa5oK.js";import"./queryUtils-CcuXnom0.js";import"./json-Wa8cmqdu.js";import"./timeSupport-gzdwZJS5.js";import"./TimeOnly-sFiiDQtg.js";import"./dehydratedFeatures-n0WNkcKi.js";let o=class extends D{constructor(t){super(t),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){var t;return(t=this.grid)!=null&&t.rotateWithMap?0:U(this.view.rotation??0)}get gridRotation(){var t;return U(((t=this.grid)==null?void 0:t.rotation)??0)}get gridCenter(){var e;const{spatialReference:t,grid:i}=this;if(!i||!t||!E(i.center.spatialReference,t))return null;try{const r=j(i.center,t),n=t.isWrappable&&((e=this.view)==null?void 0:e.center)!=null?V(r.x,this.view.center.x,t):r.x;return m(n,r.y,r.z)}catch(r){return X.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",r),null}}get offsetScaleFactor(){const{pixelsPerStride:t,grid:i}=this;if(!i||!t)return 1;const{majorLineInterval:e,dynamicScaling:r}=i;return e<1?null:I(e,t,r)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:t}=this;return t?Y(t.spacing,t.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:t}=this;return t==null?null:t*W(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:t}=this.view;return this.gridCenter?N(this.gridCenter[0],this.gridCenter[1],t):null}get pixelsPerStride(){const{gridMetersPerStride:t,viewMetersPerPixel:i}=this;return i&&t?t/i:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(t,i,e){var u;const{options:r,view:n}=this;if(!(r!=null&&r.effectiveGridEnabled)||!n.grid||(u=e.feature)!=null&&u.attributes&&_ in e.feature.attributes)return[];const p=e.coordinateHelper.arrayToPoint(t),a=r.distance*(e.pointer==="touch"?r.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(p,a)}fetchCandidatesSync(t,i){const e=[],{grid:r,effectiveViewRotation:n,gridRotation:p,gridCenter:a,viewMetersPerPixel:u,viewMetersPerSRUnit:g,offsetScaleFactor:S,spatialReference:f,gridMetersPerStride:C,pixelsPerStride:$}=this;if(!(r&&u&&g&&a&&f&&S&&C&&$)||!r.dynamicScaling&&$<T||!E(t.spatialReference,f))return e;const y=j(t,f),L=m(y.x,y.y,y.z),c=h(L,-p,a,-n),P=C/g*S,d=A(c,P,a),{shouldSnapX:v,shouldSnapY:w}=B(d,c,i,u,g);if(!v&&!w)return[];const O=m((v?d:c)[0],(w?d:c)[1]),M=h(O,p,a,n),b=h(d,p,a,n);if(w){const R=G(d,c,P,"y"),x=h(R,p,a,n);e.push(new z({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}if(v){const R=G(d,c,P,"x"),x=h(R,p,a,n);e.push(new z({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}return v&&w&&e.push(new q(M,e[0],e[1],!1)),e}};s([l({constructOnly:!0})],o.prototype,"view",void 0),s([l()],o.prototype,"options",void 0),s([l()],o.prototype,"grid",null),s([l()],o.prototype,"effectiveViewRotation",null),s([l()],o.prototype,"gridRotation",null),s([l()],o.prototype,"gridCenter",null),s([l()],o.prototype,"offsetScaleFactor",null),s([l()],o.prototype,"spatialReference",null),s([l()],o.prototype,"gridMetersPerStride",null),s([l()],o.prototype,"viewMetersPerPixel",null),s([l()],o.prototype,"viewMetersPerSRUnit",null),s([l()],o.prototype,"pixelsPerStride",null),s([l()],o.prototype,"updating",null),o=s([H("esri.views.interactive.snapping.GridSnappingEngine")],o);const h=(t,i,e,r)=>{const n=k(t[0],t[1],t[2]);return F(n,F(n,n,e,i),e,r)},A=(t,i,e)=>{const r=(t[0]-e[0])/i,n=(t[1]-e[1])/i,p=Math.trunc(r),a=Math.trunc(n),u=Math.round(r%1),g=Math.round(n%1),S=e[0]+(p+u)*i,f=e[1]+(a+g)*i;return m(S,f)},B=(t,i,e,r,n)=>{if(r<=0)return{shouldSnapX:!1,shouldSnapY:!1};const p=(t[0]-i[0])/r,a=(t[1]-i[1])/r;return{shouldSnapX:Math.abs(p*n)<e,shouldSnapY:Math.abs(a*n)<e}},G=(t,i,e,r)=>{if(r==="y"){const p=i[0]>t[0]?1:-1;return m(t[0]+e*p,t[1])}const n=i[1]>t[1]?1:-1;return m(t[0],t[1]+e*n)};export{o as GridSnappingEngine};
