import{v as l,w as f,z as g,S as x,c5 as ee,c6 as q,F as b,jN as ie,fJ as te,dP as oe,lL as W,lM as le,lN as se,ba as ne,aa as X,a7 as ae,g$ as ue}from"./index-HvZUpAiV.js";import{O as pe}from"./quat-oOomIECn.js";import{e as de}from"./quatf64-aQ5IuZRd.js";import{t as Y,n as Z}from"./vec3f32-nZdmKIgz.js";import{w as ce,l as fe,c as ye,I as he}from"./I3SBinaryReader-eTe8pCj5.js";import{I as be}from"./orientedBoundingBox-neA8kfp8.js";var k;let R=k=class extends x{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new k({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};l([f({type:String,json:{write:{isRequired:!0}}})],R.prototype,"field",void 0),l([f({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],R.prototype,"minValue",void 0),l([f({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],R.prototype,"maxValue",void 0),R=k=l([g("esri.renderers.support.pointCloud.ColorModulation")],R);const me=R,O=new ee({pointCloudFixedSizeAlgorithm:"fixed-size",pointCloudSplatAlgorithm:"splat"});let M=class extends x{};l([f({type:O.apiValues,readOnly:!0,nonNullable:!0,json:{type:O.jsonValues,read:!1,write:{writer:O.write,isRequired:!0}}})],M.prototype,"type",void 0),M=l([g("esri.renderers.support.pointCloud.PointSizeAlgorithm")],M);const G=M;var P;let j=P=class extends G{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new P({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};l([q({pointCloudFixedSizeAlgorithm:"fixed-size"})],j.prototype,"type",void 0),l([f({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}})],j.prototype,"size",void 0),l([f({type:Boolean,json:{write:!0}})],j.prototype,"useRealWorldSymbolSizes",void 0),j=P=l([g("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],j);const ve=j;var B;let I=B=class extends G{constructor(){super(...arguments),this.type="splat",this.scaleFactor=1}clone(){return new B({scaleFactor:this.scaleFactor})}};l([q({pointCloudSplatAlgorithm:"splat"})],I.prototype,"type",void 0),l([f({type:Number,value:1,nonNullable:!0,json:{write:{isRequired:!0}}})],I.prototype,"scaleFactor",void 0),I=B=l([g("esri.renderers.support.pointCloud.PointSizeSplatAlgorithm")],I);const ge=I,we={key:"type",base:G,typeMap:{"fixed-size":ve,splat:ge}},D=ie()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let w=class extends x{constructor(e){super(e),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:b(this.pointSizeAlgorithm),colorModulation:b(this.colorModulation),pointsPerInch:b(this.pointsPerInch)}}};l([f({type:D.apiValues,readOnly:!0,nonNullable:!0,json:{type:D.jsonValues,read:!1,write:{writer:D.write,isRequired:!0}}})],w.prototype,"type",void 0),l([f({types:we,json:{write:!0}})],w.prototype,"pointSizeAlgorithm",void 0),l([f({type:me,json:{write:!0}})],w.prototype,"colorModulation",void 0),l([f({json:{write:!0},nonNullable:!0,type:Number})],w.prototype,"pointsPerInch",void 0),w=l([g("esri.renderers.PointCloudRenderer")],w),function(i){i.fieldTransformTypeKebabDict=new ee({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})}(w||(w={}));const m=w;var F;let T=F=class extends x{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new F({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:b(this.color)})}};l([f({type:String,json:{write:!0}})],T.prototype,"description",void 0),l([f({type:String,json:{write:!0}})],T.prototype,"label",void 0),l([f({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue",isRequired:!0}}})],T.prototype,"minValue",void 0),l([f({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue",isRequired:!0}}})],T.prototype,"maxValue",void 0),l([f({type:oe,json:{type:[te],write:{isRequired:!0}}})],T.prototype,"color",void 0),T=F=l([g("esri.renderers.support.pointCloud.ColorClassBreakInfo")],T);const Te=T;var U;let S=U=class extends m{constructor(i){super(i),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new U({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:b(this.colorClassBreakInfos),legendOptions:b(this.legendOptions)})}};l([q({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],S.prototype,"type",void 0),l([f({json:{write:{isRequired:!0}},type:String})],S.prototype,"field",void 0),l([f({type:W,json:{write:!0}})],S.prototype,"legendOptions",void 0),l([f({type:m.fieldTransformTypeKebabDict.apiValues,json:{type:m.fieldTransformTypeKebabDict.jsonValues,read:m.fieldTransformTypeKebabDict.read,write:m.fieldTransformTypeKebabDict.write}})],S.prototype,"fieldTransformType",void 0),l([f({type:[Te],json:{write:{isRequired:!0}}})],S.prototype,"colorClassBreakInfos",void 0),S=U=l([g("esri.renderers.PointCloudClassBreaksRenderer")],S);const Se=S;var K;let V=K=class extends m{constructor(i){super(i),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new K({...this.cloneProperties(),field:b(this.field),fieldTransformType:b(this.fieldTransformType),stops:b(this.stops),legendOptions:b(this.legendOptions)})}};l([q({pointCloudStretchRenderer:"point-cloud-stretch"})],V.prototype,"type",void 0),l([f({json:{write:{isRequired:!0}},type:String})],V.prototype,"field",void 0),l([f({type:W,json:{write:!0}})],V.prototype,"legendOptions",void 0),l([f({type:m.fieldTransformTypeKebabDict.apiValues,json:{type:m.fieldTransformTypeKebabDict.jsonValues,read:m.fieldTransformTypeKebabDict.read,write:m.fieldTransformTypeKebabDict.write}})],V.prototype,"fieldTransformType",void 0),l([f({type:[le],json:{write:{isRequired:!0}}})],V.prototype,"stops",void 0),V=K=l([g("esri.renderers.PointCloudStretchRenderer")],V);const Ve=V;var J;let C=J=class extends x{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new J({description:this.description,label:this.label,values:b(this.values),color:b(this.color)})}};l([f({type:String,json:{write:!0}})],C.prototype,"description",void 0),l([f({type:String,json:{write:!0}})],C.prototype,"label",void 0),l([f({type:[String],json:{write:{isRequired:!0}}})],C.prototype,"values",void 0),l([f({type:oe,json:{type:[te],write:{isRequired:!0}}})],C.prototype,"color",void 0),C=J=l([g("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],C);const $e=C;var _;let $=_=class extends m{constructor(i){super(i),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new _({...this.cloneProperties(),field:b(this.field),fieldTransformType:b(this.fieldTransformType),colorUniqueValueInfos:b(this.colorUniqueValueInfos),legendOptions:b(this.legendOptions)})}};l([q({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],$.prototype,"type",void 0),l([f({json:{write:{isRequired:!0}},type:String})],$.prototype,"field",void 0),l([f({type:m.fieldTransformTypeKebabDict.apiValues,json:{type:m.fieldTransformTypeKebabDict.jsonValues,read:m.fieldTransformTypeKebabDict.read,write:m.fieldTransformTypeKebabDict.write}})],$.prototype,"fieldTransformType",void 0),l([f({type:[$e],json:{write:{isRequired:!0}}})],$.prototype,"colorUniqueValueInfos",void 0),l([f({type:W,json:{write:!0}})],$.prototype,"legendOptions",void 0),$=_=l([g("esri.renderers.PointCloudUniqueValueRenderer")],$);const Ce=$;function Re(i,e,n,s){const{rendererJSON:d,isRGBRenderer:h}=i;let o=null,a=null;if(e&&h)o=e;else if(e&&(d==null?void 0:d.type)==="pointCloudUniqueValueRenderer"){a=Ce.fromJSON(d);const t=a.colorUniqueValueInfos;o=new Uint8Array(3*s);const c=N(a.fieldTransformType);for(let r=0;r<s;r++){const u=(c?c(e[r]):e[r])+"";for(let p=0;p<t.length;p++)if(t[p].values.includes(u)){o[3*r]=t[p].color.r,o[3*r+1]=t[p].color.g,o[3*r+2]=t[p].color.b;break}}}else if(e&&(d==null?void 0:d.type)==="pointCloudStretchRenderer"){a=Ve.fromJSON(d);const t=a.stops;o=new Uint8Array(3*s);const c=N(a.fieldTransformType);for(let r=0;r<s;r++){const u=c?c(e[r]):e[r],p=t.length-1;if(u<t[0].value)o[3*r]=t[0].color.r,o[3*r+1]=t[0].color.g,o[3*r+2]=t[0].color.b;else if(u>=t[p].value)o[3*r]=t[p].color.r,o[3*r+1]=t[p].color.g,o[3*r+2]=t[p].color.b;else for(let y=1;y<t.length;y++)if(u<t[y].value){const v=(u-t[y-1].value)/(t[y].value-t[y-1].value);o[3*r]=t[y].color.r*v+t[y-1].color.r*(1-v),o[3*r+1]=t[y].color.g*v+t[y-1].color.g*(1-v),o[3*r+2]=t[y].color.b*v+t[y-1].color.b*(1-v);break}}}else if(e&&(d==null?void 0:d.type)==="pointCloudClassBreaksRenderer"){a=Se.fromJSON(d);const t=a.colorClassBreakInfos;o=new Uint8Array(3*s);const c=N(a.fieldTransformType);for(let r=0;r<s;r++){const u=c?c(e[r]):e[r];for(let p=0;p<t.length;p++)if(u>=t[p].minValue&&u<=t[p].maxValue){o[3*r]=t[p].color.r,o[3*r+1]=t[p].color.g,o[3*r+2]=t[p].color.b;break}}}else o=new Uint8Array(3*s).fill(255);if(n&&(a!=null&&a.colorModulation)){const t=a.colorModulation.minValue,c=a.colorModulation.maxValue,r=.3;for(let u=0;u<s;u++){const p=n[u],y=p>=c?1:p<=t?r:r+(1-r)*(p-t)/(c-t);o[3*u]=y*o[3*u],o[3*u+1]=y*o[3*u+1],o[3*u+2]=y*o[3*u+2]}}return o}function je(i,e){if(i.encoding==null||i.encoding===""){const n=ce(e,i);if(n.vertexAttributes.position==null)return;const s=fe(e,n.vertexAttributes.position),d=n.header.fields,h=[d.offsetX,d.offsetY,d.offsetZ],o=[d.scaleX,d.scaleY,d.scaleZ],a=s.length/3,t=new Float64Array(3*a);for(let c=0;c<a;c++)t[3*c]=s[3*c]*o[0]+h[0],t[3*c+1]=s[3*c+1]*o[1]+h[1],t[3*c+2]=s[3*c+2]*o[2]+h[2];return t}if(i.encoding==="lepcc-xyz")return ye(e).result}function z(i,e,n){return i!=null&&i.attributeInfo.useElevation?e?Ie(e,n):null:i!=null&&i.attributeInfo.storageInfo?he(i.attributeInfo.storageInfo,i.buffer,n):null}function Ie(i,e){const n=new Float64Array(e);for(let s=0;s<e;s++)n[s]=i[3*s+2];return n}function xe(i,e,n,s,d){const h=i.length/3;let o=0;for(let a=0;a<h;a++){let t=!0;for(let c=0;c<s.length&&t;c++){const{filterJSON:r}=s[c],u=d[c].values[a];switch(r.type){case"pointCloudValueFilter":{const p=r.mode==="exclude";r.values.includes(u)===p&&(t=!1);break}case"pointCloudBitfieldFilter":{const p=Q(r.requiredSetBits),y=Q(r.requiredClearBits);((u&p)!==p||u&y)&&(t=!1);break}case"pointCloudReturnFilter":{const p=15&u,y=u>>>4&15,v=y>1,re=p===1,E=p===y;let L=!1;for(const A of r.includedReturns)if(A==="last"&&E||A==="firstOfMany"&&re&&v||A==="lastOfMany"&&E&&v||A==="single"&&!v){L=!0;break}L||(t=!1);break}}}t&&(n[o]=a,i[3*o]=i[3*a],i[3*o+1]=i[3*a+1],i[3*o+2]=i[3*a+2],e[3*o]=e[3*a],e[3*o+1]=e[3*a+1],e[3*o+2]=e[3*a+2],o++)}return o}function N(i){switch(i){default:case null:case"none":return e=>e;case"low-four-bit":return e=>15&e;case"high-four-bit":return e=>(240&e)>>4;case"absolute-value":return e=>Math.abs(e);case"modulo-ten":return e=>e%10}}function Q(i){let e=0;for(const n of i||[])e|=1<<n;return e}class qe{transform(e){const n=this._transform(e),s=[n.points.buffer,n.rgb.buffer];n.pointIdFilterMap!=null&&s.push(n.pointIdFilterMap.buffer);for(const d of n.attributes)"buffer"in d.values&&se(d.values.buffer)&&d.values.buffer!==n.rgb.buffer&&s.push(d.values.buffer);return Promise.resolve({result:n,transferList:s})}_transform(e){const n=je(e.schema,e.geometryBuffer);let s=n.length/3,d=null;const h=new Array,o=z(e.primaryAttributeData,n,s);e.primaryAttributeData!=null&&o&&h.push({attributeInfo:e.primaryAttributeData.attributeInfo,values:o});const a=z(e.modulationAttributeData,n,s);e.modulationAttributeData!=null&&a&&h.push({attributeInfo:e.modulationAttributeData.attributeInfo,values:a});let t=Re(e.rendererInfo,o,a,s);if(e.filterInfo&&e.filterInfo.length>0&&e.filterAttributesData!=null){const r=e.filterAttributesData.filter(ne).map(u=>{const p=z(u,n,s),y={attributeInfo:u.attributeInfo,values:p};return h.push(y),y});d=new Uint32Array(s),s=xe(n,t,d,e.filterInfo,r)}for(const r of e.userAttributesData){const u=z(r,n,s);h.push({attributeInfo:r.attributeInfo,values:u})}3*s<t.length&&(t=new Uint8Array(t.buffer.slice(0,3*s))),ze(n,s,e.elevationOffset);const c=Ae(n,s,be.fromData(e.obbData),X.fromJSON(e.inSR),X.fromJSON(e.outSR));return{obbData:e.obbData,points:c,rgb:t,attributes:h,pointIdFilterMap:d}}}function Ae(i,e,n,s,d){if(!ae(i,s,0,i,d,0,e))throw new Error("Can't reproject");const h=Y(n.center),o=Z(),a=Z(),t=Y(n.halfSize);pe(H,n.quaternion);const c=new Float32Array(3*e);for(let r=0;r<e;r++){let u=3*r;o[0]=i[u]-h[0],o[1]=i[u+1]-h[1],o[2]=i[u+2]-h[2],ue(a,o,H),t[0]=Math.max(t[0],Math.abs(a[0])),t[1]=Math.max(t[1],Math.abs(a[1])),t[2]=Math.max(t[2],Math.abs(a[2])),c[u++]=o[0],c[u++]=o[1],c[u]=o[2]}return n.halfSize=t,c}function ze(i,e,n){if(n!==0)for(let s=0;s<e;s++)i[3*s+2]+=n}const H=de();function Me(){return new qe}const Ke=Object.freeze(Object.defineProperty({__proto__:null,default:Me},Symbol.toStringTag,{value:"Module"}));export{Ke as P,Ce as a,Ve as b,Se as c,m as d};
