const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticLength-Bo6UjJxH.js","assets/index-HvZUpAiV.js","assets/index-CknZVD3U.css","assets/SceneLayerWorker-UYo0FucA.js","assets/MeshLocalVertexSpace-D4pJWxLS.js","assets/vec3-DHZhVtM8.js","assets/projectVectorToVector-BCxdzR8G.js","assets/projectPointToVector-C1iiDdYZ.js","assets/sphere-DFCqiClV.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-BVS6atMq.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-eTe8pCj5.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-Rha5YVxV.js","assets/floatRGBA-BYWqjqxI.js","assets/NormalAttribute.glsl-BB0pCeSs.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-neA8kfp8.js","assets/quat-oOomIECn.js","assets/spatialReferenceEllipsoidUtils-gk3RTZGb.js","assets/computeTranslationToOriginAndRotation-DS1RA0a6.js","assets/popupUtils-BeF2ZTBH.js","assets/associatedFeatureServiceUtils-BytauXIA.js","assets/SketchOptions-BCFrY3ky.js","assets/geodesicUtils-C93orGFR.js","assets/quantityUtils-CkGXr1AE.js","assets/utils-DPeAAKnQ.js","assets/quantizationUtils-DhCYdMlR.js","assets/FeatureLayerSource-Bq4FRqJK.js","assets/meshVertexSpaceUtils-DX6vJSOr.js","assets/MeshTransform-D60sEMoL.js","assets/axisAngleDegrees-B6A2L6Qc.js","assets/editingSupport-CjxQvjkp.js","assets/clientSideDefaults-DX_en5ZT.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/query-Ck7H_Gwp.js","assets/pbfQueryUtils-D3UKVvA5.js","assets/pbf-mwLoLG45.js","assets/memoryEstimations-37nmr0XF.js","assets/OptimizedGeometry-Cumf0C0a.js","assets/OptimizedFeatureSet-gaSfjeKA.js","assets/executeQueryJSON-CYfIN4Os.js","assets/featureConversionUtils-ByHk-OL2.js","assets/layersCreator-Bd6iu04U.js","assets/loadUtils-DVg0Hb2K.js","assets/fetchService-BXkp93RV.js","assets/lazyLayerLoader-B559UHHi.js","assets/portalLayers-D-XO0_C2.js","assets/saveUtils-Dt9HyKPA.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-DQJSbXHU.js","assets/RasterVFDisplayObject-CW-tzZw4.js","assets/VertexArrayObject-uoJ0-Wyy.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-ZxVyVg14.js","assets/WGLContainer-CwrJPf2u.js","assets/dataViewUtils-DAtkXtzs.js","assets/BoundingBox-DCULi5_d.js","assets/ProgramTemplate-BfiyU3Gv.js","assets/vec3f32-nZdmKIgz.js","assets/Container-C_Kq1KIA.js","assets/config-BY8iCNT-.js","assets/earcut-D9gy186-.js","assets/LayerView-DxpYE98A.js","assets/rasterUtils-ClEzkjAD.js","assets/VertexStream-CiskS4CB.js","assets/utils-DTW7hrDn.js","assets/FramebufferObject-DWpknOee.js","assets/TileContainer-CX6XEddH.js","assets/rasterProjectionHelper-DiAoS_Zb.js","assets/timeSupport-CoRxLEWY.js","assets/RefreshableLayerView-B0NjhT76.js","assets/RasterWorker-Ctlq_tqE.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/ElevationLayer-Q2jdXjv8.js","assets/ByteSizeUnit-BsxeN7wM.js","assets/WorkerHandle-DvtwOnUf.js","assets/editingTools-IqGnyNnb.js","assets/interfaces-BZbx386I.js","assets/VerticalOffset.glsl-DuJPIa91.js","assets/Indices-p2DC-8DK.js","assets/InterleavedLayout-MsmgK_rD.js","assets/BufferView-bq7L8kVa.js","assets/triangle-CwVnTGeB.js","assets/lineSegment-qKxmYvue.js","assets/renderState-C2pj_NJg.js","assets/boundedPlane-GSBO2ry_.js","assets/requestImageUtils-BmIulmFl.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-CTv5PIaf.js","assets/triangulationUtils-Bd0RxlX9.js","assets/deduplicate-CoqyDpyd.js","assets/RibbonLine.glsl-DHsFpK_R.js","assets/HUDVisibility.glsl-BzrpovQk.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-zybGNFCc.js","assets/Octree-CtgEqypn.js","assets/HUDMaterial.glsl-Bw5Yolut.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-BGbSAk8h.js","assets/GraphicsLayer-CJh6KSfA.js","assets/RouteLayerView2D-CRO0_qJI.js","assets/GraphicContainer-CtkqudBK.js","assets/AGraphicContainer-XAyEf6Hp.js","assets/TechniqueInstance-LmzY8NVQ.js","assets/UpdateTracking2D-D0nTT2Mu.js","assets/FeatureCommandQueue-BF6Kyd6u.js","assets/CIMSymbolHelper-C8RwZNuh.js","assets/BidiEngine-QXap_35O.js","assets/fontUtils-CX2ZFjAl.js","assets/Rect-CnxqbxT-.js","assets/rasterizingUtils-C-5soeya.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-B4iOu8M5.js","assets/QueueProcessor-Bz8c6zwC.js","assets/GraphicsView2D-CCuVzbF4.js","assets/OverrideHelper-Dao22xbu.js","assets/FeatureMetadata-0sLTa5oK.js","assets/queryUtils-CcuXnom0.js","assets/json-Wa8cmqdu.js","assets/timeSupport-gzdwZJS5.js","assets/TimeOnly-sFiiDQtg.js","assets/dehydratedFeatures-n0WNkcKi.js","assets/automaticLengthMeasurementUtils-CztJQQQP.js","assets/memoize-DmxaQ-k8.js","assets/unitFormatUtils-BflOTXQ7.js","assets/geodesicLengthMeasurementUtils-DU3Krk_x.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-LxCw8I2H.js","assets/glUtil-BCTOiZkJ.js","assets/automaticAreaMeasurementUtils-CoT1rdbz.js","assets/PointSnappingHint-DrylikJE.js","assets/editPlaneUtils-DtoJigS2.js","assets/ReactiveSet--Ms0nxIF.js","assets/SelectedVertexTooltipInfo-PXBFRU91.js","assets/TranslateTooltipInfo-Ba_4lLnt.js","assets/ExtentScaleTooltipInfo-CpFscqLT.js","assets/GraphicManipulator-BGqtpHDP.js","assets/drapedUtils-B5qAUqPT.js","assets/KMLLayerView2D-BqGv7YM8.js","assets/BitmapTechnique-DNr2s0ox.js","assets/BitmapContainer-DcyxvR2a.js","assets/MaterialPrograms-12nZQ39A.js","assets/webglDeps-CqGOgxwM.js","assets/testSVGPremultipliedAlpha-CmjnqzNy.js","assets/FeatureLayerView2D-mUNuk9ZF.js","assets/AttributeBinsFeatureSet-BWRdljn_.js","assets/AttributeBinsQuery-4hOVMi_9.js","assets/FixedIntervalBinParameters-B-K4lQlX.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-Ct_Sm1NI.js","assets/parquet-CngeS3j7.js","assets/knowledgegraph-BZr_DVcK.js","assets/arcade-CdQpX-Ps.js","assets/unitConversion-C0dIpvTn.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-CRKIGjc5.js","assets/number-B_WoImVR.js","assets/WhereClause-_QlFWXMc.js","assets/portalUtils-C23sFnx2.js","assets/executeQueryForSnapping-C5Y1l1n4.js","assets/PooledRBush-CiScMPuY.js","assets/optimizedFeatureQueryEngineAdapter-BbhZir16.js","assets/QueryEngine-Coy-OmjN.js","assets/WhereClauseCache-CUoRI57u.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MemorySourceWorker-BiY-dfeI.js","assets/sourceUtils-CLCuHVCW.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-DiZlYX5Z.js","assets/enums-BRzLM11V.js","assets/GridShader-BkOCO2y4.js","assets/PieChartMeshWriter-BAM5PA-E.js","assets/libtess-rJTtky-3.js","assets/utils-DSG3SAOD.js","assets/grouping-CAilQFWr.js","assets/OverlayContainer-D-ey2lXR.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-BCij-tiu.js","assets/MeshWriterRegistry-DuOg7gV_.js","assets/operatorGeodeticDensify-CO73TQnF.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-442t_co0.js","assets/PointCloudWorker-DqeKkLN9.js","assets/uploadAssets-CemhXYiC.js","assets/meshFeatureAttributes--xcZMgHQ.js","assets/SourceLayerData-DEXwmDE_.js","assets/VideoLayerView2D-COiILVNn.js","assets/webdocSaveUtils-ikued9Zp.js","assets/basemapUtils-TkRYahlU.js","assets/resourceUtils-CueS85LF.js","assets/WFSSourceWorker-DRTN0Hlq.js","assets/WMSLayerView2D-DFXJ5UCI.js","assets/ExportStrategy-RG5P8aQJ.js","assets/ProjectionTransformation-ConR_osk.js","assets/jsonConverter-DzhIYcGL.js","assets/operators-BTHIgX0s.js","assets/apiConverter-CeEYlua2.js","assets/operatorGeodesicBuffer-CkIWpFYa.js","assets/operatorBuffer-CkKvFfpS.js","assets/GeometryCleaner-BEJM7I4l-Cl7QY3DG.js","assets/operatorConvexHull-DhhA5KZf.js","assets/OperatorCrosses-7v1CejA7.js","assets/operatorIntersection-C8UQNzP7.js","assets/OperatorIntersects-Cj_vtiWK.js","assets/operatorOffset-CatRU3Bm.js","assets/OperatorOverlaps-BC2PfEjN.js","assets/operatorSimplify-CMFsBmiJ.js","assets/OperatorTouches-CIp-asHy.js","assets/operatorUnion-G5bsN5Gg.js","assets/OperatorWithin-CiU7OSRZ.js","assets/MeshComponent-BAemAMdh.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-Dkg4q_nU.js","assets/vec4-B6JyCAZ4.js","assets/loader-Ko8dE7kw.js","assets/objectResourceUtils-Sx4Om06U.js","assets/RealisticTree.glsl-BhhxdI4Y.js","assets/vertexSpaceConversion-DS4q0pnV.js","assets/featureLayerUtils-CBBsrEvK.js"])))=>i.map(i=>d[i]);
import{b2 as C,ai as F,aj as S,dF as _,dG as $,dH as N,b3 as P}from"./index-HvZUpAiV.js";import{s as V}from"./associatedFeatureServiceUtils-BytauXIA.js";import{t as f,i as b,a as J}from"./fetchService-BXkp93RV.js";import{a as k}from"./lazyLayerLoader-B559UHHi.js";const x={FeatureLayer:!0,SceneLayer:!0};async function X(a){const{properties:s,url:e}=a,t={...s,url:e},l=await M(e,s==null?void 0:s.customParameters),{Constructor:r,layerId:o,sourceJSON:u,parsedUrl:c,layers:y,tables:m}=l;if(y.length+m.length===0)return o!=null&&(t.layerId=o),u!=null&&(t.sourceJSON=u),new r(t);const p=new(await C(async()=>{const{default:w}=await import("./OperatorGeodeticLength-Bo6UjJxH.js").then(v=>v.d);return{default:w}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224]))).default({title:c.title});return await E(p,l,t),p}function O(a,s){return a?a.find(({id:e})=>e===s):null}function T(a,s,e,t,l){const r={...l,layerId:s};return a!=null&&(r.url=a),e!=null&&(r.sourceJSON=e),"sublayerTitleMode"in t.prototype&&(r.sublayerTitleMode="service-name"),new t(r)}async function E(a,s,e){const t=s.sublayerConstructorProvider;for(const{id:l,serverUrl:r}of s.layers){const o=O(s.sublayerInfos,l),u=T(r,l,o,(o&&(t==null?void 0:t(o)))??s.Constructor,e);a.add(u)}if(s.tables.length){const l=await h("FeatureLayer");s.tables.forEach(({id:r,serverUrl:o})=>{const u=T(o,r,O(s.tableInfos,r),l,e);a.tables.add(u)})}}async function M(a,s){var m,p,w,v,I,g,L;let e=F(a);if(e==null&&(e=await G(a,s)),e==null)throw new S("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:a});const{serverType:t,sublayer:l}=e;let r;const o={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},u=t==="FeatureServer",c=t==="SceneServer",y={parsedUrl:e,Constructor:null,layerId:u||c?l??void 0:void 0,layers:[],tables:[]};switch(t){case"MapServer":if(l!=null){const{type:n}=await f(a,{customParameters:s});switch(r="FeatureLayer",n){case"Catalog Layer":r="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new S("arcgis-layers:unsupported",`fromUrl() not supported for "${n}" layers`)}}else r=await A(a,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const n=await f(a,{customParameters:s}),{tileInfo:i,cacheType:d}=n;r=i?((m=i==null?void 0:i.format)==null?void 0:m.toUpperCase())!=="LERC"||d&&d.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const n=await f(e.url.path,{customParameters:s});if(r="SceneLayer",n){const i=n==null?void 0:n.layers;if((n==null?void 0:n.layerType)==="Voxel")r="VoxelLayer";else if(i!=null&&i.length){const d=(p=i[0])==null?void 0:p.layerType;d!=null&&P[d]!=null&&(r=P[d])}}break}case"3DTilesServer":throw new S("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(r="FeatureLayer",l!=null){const n=await f(a,{customParameters:s});y.sourceJSON=n,r=b(n.type)}break;default:r=o[t]}if(x[r]&&l==null){const n=await D(a,t,s);if(u&&(y.sublayerInfos=n.layerInfos,y.tableInfos=n.tableInfos),n.layers.length+n.tables.length!==1)y.layers=n.layers,y.tables=n.tables,u&&((w=n.layerInfos)!=null&&w.length)&&(y.sublayerConstructorProvider=await K(n.layerInfos));else if(u||c){const i=((v=n.layerInfos)==null?void 0:v[0])??((I=n.tableInfos)==null?void 0:I[0]);if(y.layerId=((g=n.layers[0])==null?void 0:g.id)??((L=n.tables[0])==null?void 0:L.id),y.sourceJSON=i,u){const d=i==null?void 0:i.type;r=b(d)}}}return y.Constructor=await h(r),y}async function G(a,s){var u;const e=await f(a,{customParameters:s});let t=null,l=null;const r=e.type;if(r==="Feature Layer"||r==="Table"?(t="FeatureServer",l=e.id??null):r==="indexedVector"?t="VectorTileServer":e.hasOwnProperty("mapName")?t="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?t="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?t="FeatureServer":e.hasOwnProperty("streamUrls")?t="StreamServer":U(e)?(t="SceneServer",l=e.id):e.hasOwnProperty("layers")&&U((u=e.layers)==null?void 0:u[0])&&(t="SceneServer"),!t)return null;const o=l!=null?_(a):null;return{title:o!=null&&e.name||N(a),serverType:t,sublayer:l,url:{path:o!=null?o.serviceUrl:$(a).path}}}function U(a){return a!=null&&a.hasOwnProperty("store")&&a.hasOwnProperty("id")&&typeof a.id=="number"}async function D(a,s,e){let t,l,r=!1;switch(s){case"FeatureServer":{const c=await J(a,{customParameters:e});r=!!c.layersJSON,t=c.layersJSON||c.serviceJSON;break}case"SceneServer":{const c=await R(a,e);t=c.serviceInfo,l=c.tableServerUrl;break}default:t=await f(a,{customParameters:e})}const o=t==null?void 0:t.layers,u=t==null?void 0:t.tables;return{layers:(o==null?void 0:o.map(c=>({id:c.id})).reverse())||[],tables:(u==null?void 0:u.map(c=>({serverUrl:l,id:c.id})).reverse())||[],layerInfos:r?o:[],tableInfos:r?u:[]}}async function R(a,s){var l;const e=await f(a,{customParameters:s});if(!((l=e.layers)==null?void 0:l[0]))return{serviceInfo:e};try{const{serverUrl:r}=await V(a),o=await f(r,{customParameters:s}).catch(()=>null);return o&&(e.tables=o.tables),{serviceInfo:e,tableServerUrl:r}}catch{return{serviceInfo:e}}}async function h(a){return(0,k[a])()}async function A(a,s){return(await f(a,{customParameters:s})).tileInfo}async function K(a){if(!a.length)return;const s=new Set,e=[];for(const{type:r}of a)s.has(r)||(s.add(r),e.push(h(b(r))));const t=await Promise.all(e),l=new Map;return Array.from(s).forEach((r,o)=>{l.set(r,t[o])}),r=>l.get(r.type)}export{X as fromUrl};
