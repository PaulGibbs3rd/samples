import{an as m,ee as u,ef as h}from"./index-HvZUpAiV.js";import{t as f}from"./query-Ck7H_Gwp.js";import{a as l}from"./AttachmentInfo-BVPrpTvP.js";import"./pbfQueryUtils-D3UKVvA5.js";import"./pbf-mwLoLG45.js";import"./memoryEstimations-37nmr0XF.js";import"./OptimizedGeometry-Cumf0C0a.js";import"./OptimizedFeatureSet-gaSfjeKA.js";function y(s){const t=s.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t}function k(s,t){const e={};for(const a of t){const{parentObjectId:o,parentGlobalId:n,attachmentInfos:c}=a;for(const r of c){const{id:d}=r,p=u(h(`${s.path}/${o}/attachments/${d}`)),i=l.fromJSON(r);i.set({url:p,parentObjectId:o,parentGlobalId:n}),e[o]?e[o].push(i):e[o]=[i]}}return e}function w(s,t,e){let a={query:f({...s.query,f:"json",...y(t)})};return e&&(a={...e,...a,query:{...e.query,...a.query}}),m(s.path+"/queryAttachments",a).then(o=>o.data.attachmentGroups)}async function z(s,t,e){const{objectIds:a}=t,o=[];for(const n of a)o.push(m(s.path+"/"+n+"/attachments",e));return Promise.all(o).then(n=>a.map((c,r)=>({parentObjectId:c,attachmentInfos:n[r].data.attachmentInfos})))}export{w as executeAttachmentQuery,z as fetchAttachments,k as processAttachmentQueryResult};
