import{bb as U,jD as O,l as F,jE as W,jF as G,gD as H,eB as I,eA as z,jG as X,jH as Y,jI as Z,gw as ee,bK as te,bL as ie,jJ as re,ej as se,aE as ne,v as L,w as k,z as oe}from"./index-HvZUpAiV.js";import{f as A,o as J}from"./quantityUtils-CkGXr1AE.js";import{p as P,N as f,u as y,n as u,s as c,t as $,b as j,r as B,v as R,M as K,J as ae,w as he,I as q,e as N,m as pe,x as de,k as le,E as ce}from"./SketchOptions-BCFrY3ky.js";import{s as x,r as ge,g as fe,p as S,d as me,o as ue,h as xe}from"./RouteLayerInteraction-BGbSAk8h.js";import{u as Q}from"./geodesicLengthMeasurementUtils-DU3Krk_x.js";import"./geodesicUtils-C93orGFR.js";import"./plane-BVS6atMq.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DFCqiClV.js";import"./projectVectorToVector-BCxdzR8G.js";import"./projectPointToVector-C1iiDdYZ.js";import"./GraphicsLayer-CJh6KSfA.js";import"./RouteLayerView2D-CRO0_qJI.js";import"./LayerView-DxpYE98A.js";import"./Container-C_Kq1KIA.js";import"./GraphicContainer-CtkqudBK.js";import"./AGraphicContainer-XAyEf6Hp.js";import"./TechniqueInstance-LmzY8NVQ.js";import"./UpdateTracking2D-D0nTT2Mu.js";import"./dataViewUtils-DAtkXtzs.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-DCULi5_d.js";import"./FramebufferObject-DWpknOee.js";import"./VertexArrayObject-uoJ0-Wyy.js";import"./memoryEstimations-37nmr0XF.js";import"./TileContainer-CX6XEddH.js";import"./WGLContainer-CwrJPf2u.js";import"./ProgramTemplate-BfiyU3Gv.js";import"./vec3f32-nZdmKIgz.js";import"./config-BY8iCNT-.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-ByHk-OL2.js";import"./OptimizedFeatureSet-gaSfjeKA.js";import"./OptimizedGeometry-Cumf0C0a.js";import"./FeatureCommandQueue-BF6Kyd6u.js";import"./CIMSymbolHelper-C8RwZNuh.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CX2ZFjAl.js";import"./Rect-CnxqbxT-.js";import"./rasterizingUtils-C-5soeya.js";import"./floatRGBA-BYWqjqxI.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-B4iOu8M5.js";import"./ShaderBuilder-CTv5PIaf.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-Bz8c6zwC.js";import"./GraphicsView2D-CCuVzbF4.js";import"./OverrideHelper-Dao22xbu.js";import"./quantizationUtils-DhCYdMlR.js";import"./FeatureMetadata-0sLTa5oK.js";import"./queryUtils-CcuXnom0.js";import"./json-Wa8cmqdu.js";import"./timeSupport-gzdwZJS5.js";import"./TimeOnly-sFiiDQtg.js";import"./dehydratedFeatures-n0WNkcKi.js";import"./geometryEngineBase-B0ZyeKAX.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-LxCw8I2H.js";class C{constructor(i,e){this.view=i,this.options=e,this.squaredShortLineThreshold=P.shortLineThreshold*P.shortLineThreshold}snap(i,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(i,e):this.snapNewVertex(i,e)}edgeExceedsShortLineThreshold(i,e){return this.exceedsShortLineThreshold(f(i.leftVertex.pos,this.view,e),f(i.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(i,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||y(x(e,t,u,this.view),x(i,t,u,this.view))>this.squaredShortLineThreshold}isVertical(i,e,{spatialReference:t}){const r=U(t);return O(c(i),c(e))*r<P.verticalLineThresholdMeters}squaredProximityThreshold(i){return i==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:i,touchSensitivityMultiplier:e}=this.options,t=i*e;return t*t}}class ve extends C{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,s=[];if(r<1)return s;const{spatialReference:n}=e,a=x(i,n,u,this.view),{view:o}=this,h=t.edges[r-1];let p=h;do{if(this.edgeExceedsShortLineThreshold(p,e)){const g=$(p,o,e);this._processCandidateProposal(g.left,g.right,i,a,e,s)}p=p.leftVertex.leftEdge}while(p&&p!==h);return s}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<2)return t;const{view:n}=this,{spatialReference:a}=e,o=x(i,a,u,n),h=r.leftEdge,p=r.rightEdge;h&&p&&this.edgeExceedsShortLineThreshold(h,e)&&this.edgeExceedsShortLineThreshold(p,e)&&this._processCandidateProposal(f(h.leftVertex.pos,n,e),f(p.rightVertex.pos,n,e),i,o,e,t);const g=s.edges[0];let l=g;do{if(l!==r.leftEdge&&l!==r.rightEdge&&this.edgeExceedsShortLineThreshold(l,e)){const m=$(l,n,e);this._processCandidateProposal(m.left,m.right,i,o,e,t)}l=l.rightVertex.rightEdge}while(l&&l!==g);return t}_processCandidateProposal(i,e,t,r,s,n){var g;const{spatialReference:a,pointer:o}=s,h=F();Ee(h,i,e,t,s);const p=j(B(h));y(r,x(p,a,u,this.view))<this.squaredProximityThreshold(o)&&n.push(new ge({lineStart:i,lineEnd:e,targetPoint:p,isDraped:((g=s.elevationInfo)==null?void 0:g.mode)==="on-the-ground"}))}}function Ee(d,i,e,t,r){we(d,i,e,t,r)||Ve(d,t,i,e)}function we(d,i,e,t,{spatialReference:r}){const s=R(i,e,r,r);if(s==null)return!1;const n=R(e,t,r,r);if(n==null)return!1;const a=Q(e,t,r);if(a==null)return!1;const o=Math.abs(W.shortestSignedDiff(s,n))>Math.PI/2?G.normalize(s+Math.PI):s;return K(d,e,r,A(a,"meters"),J(o,"radians","geographic"),"geodesic"),d[2]=t[2],!0}function Ve(d,i,e,t){ae(i,{start:e,end:t,type:he.LINE},d),d[2]=i[2]}let Pe=class extends C{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,s=t.vertices.length,n=[];if(r<2)return n;const{view:a}=this,o=x(i,e.spatialReference,u,a),h=f(t.vertices[s-1].pos,a,e),p=f(t.vertices[0].pos,a,e),g=t.edges[r-1];let l=g;do{if(this.edgeExceedsShortLineThreshold(l,e)){const m=$(l,a,e);this._checkEdgeForParallelLines(m,h,i,o,e,n),this._checkEdgeForParallelLines(m,p,i,o,e,n)}l=l.leftVertex.leftEdge}while(l&&l!==g);return n}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<3)return t;const{view:n}=this,a=x(i,e.spatialReference,u,n),o=r.leftEdge,h=r.rightEdge,p=s.vertices[0],g=f(p.pos,n,e),l=s.vertices.length,m=s.vertices[l-1],w=f(m.pos,n,e),_=s.edges[0];let v=_;do{if(v!==o&&v!==h&&this.edgeExceedsShortLineThreshold(v,e)){const T=$(v,n,e);o&&this._checkEdgeForParallelLines(T,f(o.leftVertex.pos,n,e),i,a,e,t),h&&this._checkEdgeForParallelLines(T,f(h.rightVertex.pos,n,e),i,a,e,t),r===p?this._checkEdgeForParallelLines(T,w,i,a,e,t):r===m&&this._checkEdgeForParallelLines(T,g,i,a,e,t)}v=v.rightVertex.rightEdge}while(v&&v!==_);return t}_checkEdgeForParallelLines(i,e,t,r,s,n){var l;const a=i.left,o=i.right;if(q(E,c(e),c(a),c(o)),H(E,c(e))<P.parallelLineThreshold)return;q(E,c(t),c(a),c(o),c(e));const{spatialReference:h,pointer:p}=s,g=j(N(E[0],E[1],t[2]));if(y(r,x(g,h,u,this.view))<this.squaredProximityThreshold(p)){if(this.isVertical(g,e,s)||this.isVertical(a,o,s)||ye(i,n))return;n.push(new fe({referenceLine:i,lineStart:e,targetPoint:g,isDraped:((l=s.elevationInfo)==null?void 0:l.mode)==="on-the-ground"}))}}};function ye(d,i){const e=d.left,t=d.right;for(const r of i)if(q(E,c(t),c(r.constraint.start),c(r.constraint.end),c(e)),H(E,c(t))<P.parallelLineThreshold)return r.addReferenceLine(d),!0;return!1}const E=I();class _e extends C{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=[];if(t.vertices.length<2)return r;const{view:s}=this,n=x(i,e.spatialReference,u,s),a=t.vertices.at(-1);this._checkForSnappingCandidate(S.LastVertex,r,a.leftEdge,a,a.leftEdge.leftVertex,i,n,e);const o=t.vertices[0];return this._checkForSnappingCandidate(S.FirstVertex,r,o.rightEdge,o,o.rightEdge.rightVertex,i,n,e),r}snapExistingVertex(i,e){const t=[],r=e.vertexHandle;if(r.component.vertices.length<3)return t;const{view:s}=this,n=x(i,e.spatialReference,u,s),a=r.leftEdge,o=r.rightEdge;if(a!=null&&a.leftVertex.leftEdge){const h=a.leftVertex.leftEdge;this._checkForSnappingCandidate(S.ExistingEdge,t,h,h.rightVertex,h.leftVertex,i,n,e)}if(o!=null&&o.rightVertex.rightEdge){const h=o.rightVertex.rightEdge;this._checkForSnappingCandidate(S.ExistingEdge,t,h,h.leftVertex,h.rightVertex,i,n,e)}return t}_checkForSnappingCandidate(i,e,t,r,s,n,a,o){if(!this.edgeExceedsShortLineThreshold(t,o))return;const h=this.view,p=f(r.pos,h,o),g=f(s.pos,h,o);Te(b,g,p,n,o),this._checkForSnappingCandidateAlongProjectedRay(i,e,g,p,b,n,a,o)}_checkForSnappingCandidateAlongProjectedRay(i,e,t,r,s,n,a,o){var v;const{spatialReference:h,pointer:p}=o,g=z(M,c(n),c(r)),l=X(s,g)/Y(s),m=Z(M,c(r),s,l),w=j(N(m[0],m[1],n[2]));if(y(a,x(w,h,u,this.view))>this.squaredProximityThreshold(p)||this.isVertical(w,r,o)||this.isVertical(r,t,o))return;const _=ee(F(),r,s,Math.sign(l));e.push(new me({targetPoint:w,constraint:new pe(r,B(_)),previousVertex:t,otherVertex:r,otherVertexType:ue.CENTER,selfSnappingType:i,isDraped:((v=o.elevationInfo)==null?void 0:v.mode)==="on-the-ground"}))}}function Te(d,i,e,t,r){Le(d,i,e,t,r)||Se(d,i,e)}function Le(d,i,e,t,{spatialReference:r}){const s=R(i,e,r,r);if(s==null)return!1;const n=R(e,t,r,r);if(n==null)return!1;const a=Math.sign(G.shortestSignedDiff(s,n))*Math.PI*.5,o=J(s+a,"radians","geographic"),h=F(),p=Q(e,t,r);return p!=null&&(K(h,e,r,A(p,"meters"),o,"geodesic"),te(d,h,e),!0)}function Se(d,i,e){const t=z(M,c(e),c(i));ie(d,t[1],-t[0],0)}const M=I(),b=F();let $e=class extends C{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=[],s=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||s<2)return r;const{view:n}=this,a=t.vertices[0],o=t.vertices[s-1],h=f(a.pos,n,e),p=f(o.pos,n,e);return this._processCandidateProposal(h,p,i,e,r),r}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<2||e.editGeometryOperations.data.type==="polyline"&&(r.index===0||r.index===s.vertices.length-1))return t;const{view:n}=this,a=f(r.leftEdge.leftVertex.pos,n,e),o=f(r.rightEdge.rightVertex.pos,n,e);return this._processCandidateProposal(a,o,i,e,t),t}_processCandidateProposal(i,e,t,r,s){var m;if(!this.exceedsShortLineThreshold(i,e,r))return;const n=re(D,c(i),c(e),.5),a=.5*O(c(i),c(e)),o=de(D,c(t),n,a),h=j(N(o[0],o[1],t[2])),{spatialReference:p,pointer:g}=r,l=x(t,p,u,this.view);if(y(l,x(h,p,u,this.view))<this.squaredProximityThreshold(g)){if(this.isVertical(i,h,r)||this.isVertical(h,e,r))return;s.push(new xe({targetPoint:h,point1:i,point2:e,isDraped:((m=r.elevationInfo)==null?void 0:m.mode)==="on-the-ground"}))}}};const D=I();let V=class extends se{constructor(d){super(d),this.updating=!1,this._snappers=new ne,this._domain=le.SELF}initialize(){this._snappers.push(new Pe(this.view,this.options),new ve(this.view,this.options),new _e(this.view,this.options),new $e(this.view,this.options))}set options(d){this._set("options",d);for(const i of this._snappers)i.options=d}async fetchCandidates(d,i,e){if(!(i&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const r of this._snappers.items)for(const s of r.snap(d,e))t.push(s);return ce(d,t),t}};L([k({readOnly:!0})],V.prototype,"updating",void 0),L([k({constructOnly:!0})],V.prototype,"view",void 0),L([k()],V.prototype,"options",null),V=L([oe("esri.views.interactive.snapping.SelfSnappingEngine")],V);export{V as SelfSnappingEngine};
