const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodesicBuffer-BZ0hpwUg.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-ConR_osk.js","assets/index-HvZUpAiV.js","assets/index-CknZVD3U.css","assets/GeometryCleaner-BEJM7I4l-Cl7QY3DG.js"])))=>i.map(i=>d[i]);
import{b2 as i,cH as c,cJ as f,cI as _}from"./index-HvZUpAiV.js";import{s as l}from"./SimpleGeometryCursor-B92kdZ15.js";let n;function m(){return!!n&&_()}async function d(){if(!m()){const[t,r]=await Promise.all([i(()=>import("./OperatorGeodesicBuffer-BZ0hpwUg.js"),__vite__mapDeps([0,1,2,3,4,5])),i(()=>import("./ProjectionTransformation-ConR_osk.js").then(e=>e.bF),__vite__mapDeps([2,1,3,4])).then(e=>e.aG).then(({injectPe:e})=>e),c()]);n=new t.OperatorGeodesicBuffer,r(f)}}function v(t,r,e,o,u){return n.execute(t,r,e,o,u,!1,null)}function E(t,r,e,o,u,s){const a=n.executeMany(new l(t),r,e,o,u,!1,s,null);return Array.from(a)}function h(){return n.supportsCurves()}export{h as a,E as c,v as i,m as s,d as u};
