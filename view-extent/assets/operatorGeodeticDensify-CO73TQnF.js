const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticDensifyByLength-VXgY9jID.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-ConR_osk.js","assets/index-HvZUpAiV.js","assets/index-CknZVD3U.css"])))=>i.map(i=>d[i]);
import{b2 as i,cH as c,cI as s,cJ as a}from"./index-HvZUpAiV.js";import{s as _}from"./SimpleGeometryCursor-B92kdZ15.js";let r;function f(){return!!r&&s()}async function p(){if(!f()){const[e,n]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-VXgY9jID.js"),__vite__mapDeps([0,1,2,3,4])),i(()=>import("./ProjectionTransformation-ConR_osk.js").then(t=>t.bF),__vite__mapDeps([2,1,3,4])).then(t=>t.aG).then(({injectPe:t})=>t),c()]);r=new e.OperatorGeodeticDensifyByLength,n(a)}}function y(e,n,t,o){return r.execute(e,n,t,o,null)}function P(e,n,t,o){const u=r.executeMany(new _(e),n,t,o,null);return Array.from(u)}function d(){return r.supportsCurves()}export{d as a,P as c,p as i,f as s,y as u};
