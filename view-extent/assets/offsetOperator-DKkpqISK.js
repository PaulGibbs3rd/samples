import{eq as f,ba as x}from"./index-HvZUpAiV.js";import{w as G,j as d}from"./operatorOffset-CatRU3Bm.js";import{getSpatialReference as u,fromGeometry as y,toGeometry as p,fromGeometries as g}from"./jsonConverter-DzhIYcGL.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-ConR_osk.js";const l={round:0,bevel:1,miter:2,square:3};function M(t,e,i={}){const{miterLimit:m=10,flattenError:s=0,joins:c="round",unit:r}=i,o=u(t);r&&o&&(e=f(e,r,o));const a=y(t),n=a.getSpatialReference();return p(G(a.getGeometry(),n,e,l[c],m,s),n)}function R(t,e,i={}){const{miterLimit:m=10,flattenError:s=0,joins:c="round",unit:r}=i,o=u(t);r&&o&&(e=f(e,r,o));const[a,n]=g(t);return d(a,n,e,l[c],m,s).map(j=>p(j,n)).filter(x)}export{M as execute,R as executeMany};
