import{dj as s,dk as n,ax as d,v as u,z as l}from"./index-HvZUpAiV.js";import{d as g}from"./FeatureLayerView2D-mUNuk9ZF.js";import"./featureConversionUtils-ByHk-OL2.js";import"./OptimizedFeatureSet-gaSfjeKA.js";import"./memoryEstimations-37nmr0XF.js";import"./OptimizedGeometry-Cumf0C0a.js";import"./timeSupport-CoRxLEWY.js";import"./AttributeBinsFeatureSet-BWRdljn_.js";import"./AttributeBinsQuery-4hOVMi_9.js";import"./queryUtils-CcuXnom0.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-B-K4lQlX.js";import"./LayerView-DxpYE98A.js";import"./Container-C_Kq1KIA.js";import"./TechniqueInstance-LmzY8NVQ.js";import"./UpdateTracking2D-D0nTT2Mu.js";import"./dataViewUtils-DAtkXtzs.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-DCULi5_d.js";import"./FramebufferObject-DWpknOee.js";import"./VertexArrayObject-uoJ0-Wyy.js";import"./TileContainer-CX6XEddH.js";import"./WGLContainer-CwrJPf2u.js";import"./ProgramTemplate-BfiyU3Gv.js";import"./vec3f32-nZdmKIgz.js";import"./config-BY8iCNT-.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BF6Kyd6u.js";import"./CIMSymbolHelper-C8RwZNuh.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CX2ZFjAl.js";import"./Rect-CnxqbxT-.js";import"./rasterizingUtils-C-5soeya.js";import"./floatRGBA-BYWqjqxI.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-B4iOu8M5.js";import"./ShaderBuilder-CTv5PIaf.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-Bz8c6zwC.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-Ct_Sm1NI.js";import"./parquet-CngeS3j7.js";import"./popupUtils-BeF2ZTBH.js";import"./RefreshableLayerView-B0NjhT76.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};
