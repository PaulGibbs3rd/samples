import React, { useRef } from "react";
import GeoJSONLayer from "@arcgis/core/layers/GeoJSONLayer";
import Zoom from "@arcgis/core/widgets/Zoom";

const MyMapComponent = ({ geoJSON }) => {
  const mapRef = useRef(null); // Reference for the map
  const mapViewRef = useRef(null); // Reference for the map view
  const geoJsonLayerRef = useRef(null); // Reference for the GeoJSON layer

  const onArcgisViewReadyChange = (event: any) => {
    console.log("Checking if map is not loading again");

    if (!mapRef.current && !mapViewRef.current) {
      // Initialize map and view references
      const map = event.target.map;
      const view = event.target.view;

      mapRef.current = map;
      mapViewRef.current = view;

      console.log("Map and view are now set");

      // Add Zoom widget
      const zoom = new Zoom({
        view: view,
      });
      view.ui.add(zoom, "bottom-right");

      // Add GeoJSON layer if not already added
      if (!geoJsonLayerRef.current) {
        const geoJsonBlob = new Blob([JSON.stringify(geoJSON)], {
          type: "application/json",
        });
        const geoJsonUrl = URL.createObjectURL(geoJsonBlob);

        const geoJsonLayer = new GeoJSONLayer({
          url: geoJsonUrl,
        });
        map.add(geoJsonLayer);
        geoJsonLayerRef.current = geoJsonLayer;
      }
    } else {
      console.log("Map and view already set. Skipping initialization.");
    }
  };

  const onArcgisViewChange = (event: any) => {
    console.log("onArcgisViewChange triggered");
    const view = event.target.view;

    // Update GeoJSON layer dynamically if geoJSON changes
    if (geoJsonLayerRef.current) {
      const geoJsonBlob = new Blob([JSON.stringify(geoJSON)], {
        type: "application/json",
      });
      const geoJsonUrl = URL.createObjectURL(geoJsonBlob);

      geoJsonLayerRef.current.url = geoJsonUrl;
    }
  };

  return (
    <ArcgisMap
      center={[-98, 39]}
      zoom={8}
      onArcgisViewReadyChange={onArcgisViewReadyChange}
      onArcgisViewChange={onArcgisViewChange}
    />
  );
};

export default MyMapComponent;
